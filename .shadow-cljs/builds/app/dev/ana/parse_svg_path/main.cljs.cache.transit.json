["^ ","~:output",["^ ","~:js","goog.provide('parse_svg_path.main');\ngoog.require('cljs.core');\ngoog.require('cljs.spec.alpha');\ngoog.require('reagent.core');\ngoog.require('clojure.string');\ngoog.require('parse_svg_path.latex');\nif((typeof parse_svg_path !== 'undefined') && (typeof parse_svg_path.main !== 'undefined') && (typeof parse_svg_path.main.path !== 'undefined')){\n} else {\nparse_svg_path.main.path = reagent.core.atom.cljs$core$IFn$_invoke$arity$1(\"M89 629Q89 663 116 684T171 705Q215 705 237 681T260 634Q260 619 233 434T204 244Q201 237 175 237Q150 237 146 244Q144 248 117 433T89 629ZM90 86Q90 125 116 148T177 171Q211 169 235 146T259 86Q259 48 235 25T175 1Q138 1 114 24T90 86Z\");\n}\nif((typeof parse_svg_path !== 'undefined') && (typeof parse_svg_path.main !== 'undefined') && (typeof parse_svg_path.main.textbox !== 'undefined')){\n} else {\nparse_svg_path.main.textbox = reagent.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(parse_svg_path.main.path));\n}\nparse_svg_path.main.svg_path_commands = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"move-to\",\"move-to\",-127537048),cljs.core.set(\"Mm\"),new cljs.core.Keyword(null,\"line-to\",\"line-to\",1332939595),cljs.core.set(\"LlHhVv\"),new cljs.core.Keyword(null,\"cubic-bezier\",\"cubic-bezier\",536841881),cljs.core.set(\"CcSs\"),new cljs.core.Keyword(null,\"quadratic-bezier\",\"quadratic-bezier\",2144881673),cljs.core.set(\"QqTt\"),new cljs.core.Keyword(null,\"arc\",\"arc\",252411045),cljs.core.set(\"Aa\"),new cljs.core.Keyword(null,\"close-path\",\"close-path\",1220079654),cljs.core.set(\"Zz\")], null);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"parse-svg-path.main\",\"path\",\"parse-svg-path.main/path\",516846111),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"segment\",\"segment\",-964921196),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"command\",\"command\",-894540724),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"set\",\"cljs.core/set\",724680876,null),\"MmLlHhVvCcSsQqTtAaZz\"),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"set\",\"cljs.core/set\",724680876,null),\"0123456789 .-,\"))))),cljs.spec.alpha.rep_PLUS_impl(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"segment\",\"segment\",-964921196),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"command\",\"command\",-894540724),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"set\",\"cljs.core/set\",724680876,null),\"MmLlHhVvCcSsQqTtAaZz\"),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"set\",\"cljs.core/set\",724680876,null),\"0123456789 .-,\")))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"segment\",\"segment\",-964921196)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"command\",\"command\",-894540724),new cljs.core.Keyword(null,\"params\",\"params\",710516235)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.set(\"MmLlHhVvCcSsQqTtAaZz\"),cljs.spec.alpha.rep_impl(cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"set\",\"cljs.core/set\",724680876,null),\"0123456789 .-,\"),cljs.core.set(\"0123456789 .-,\"))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"set\",\"cljs.core/set\",724680876,null),\"MmLlHhVvCcSsQqTtAaZz\"),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"set\",\"cljs.core/set\",724680876,null),\"0123456789 .-,\"))], null))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"command\",\"command\",-894540724),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"set\",\"cljs.core/set\",724680876,null),\"MmLlHhVvCcSsQqTtAaZz\"),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"set\",\"cljs.core/set\",724680876,null),\"0123456789 .-,\")))], null))));\n/**\n * Splits an SVG path string into a sequence of commands\n */\nparse_svg_path.main.parse_commands = (function parse_svg_path$main$parse_commands(s){\nreturn clojure.string.split.cljs$core$IFn$_invoke$arity$2(s,/(?=[A-Z])/);\n});\nparse_svg_path.main.parse_params = (function parse_svg_path$main$parse_params(v){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(parseFloat,cljs.core.re_seq(/[0-9\\.\\-\\+]+/,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,v)));\n});\nparse_svg_path.main.valid_segment_QMARK_ = (function parse_svg_path$main$valid_segment_QMARK_(p__32344){\nvar map__32345 = p__32344;\nvar map__32345__$1 = (((((!((map__32345 == null))))?(((((map__32345.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__32345.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__32345):map__32345);\nvar command = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32345__$1,new cljs.core.Keyword(null,\"command\",\"command\",-894540724));\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32345__$1,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar G__32347 = command;\nswitch (G__32347) {\ncase \"Z\":\ncase \"z\":\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),cljs.core.count(parse_svg_path.main.parse_params(params)));\n\nbreak;\ncase \"H\":\ncase \"h\":\ncase \"V\":\ncase \"v\":\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(parse_svg_path.main.parse_params(params)));\n\nbreak;\ncase \"M\":\ncase \"m\":\ncase \"T\":\ncase \"t\":\ncase \"L\":\ncase \"l\":\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(parse_svg_path.main.parse_params(params)));\n\nbreak;\ncase \"Q\":\ncase \"q\":\ncase \"S\":\ncase \"s\":\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((4),cljs.core.count(parse_svg_path.main.parse_params(params)));\n\nbreak;\ncase \"C\":\ncase \"c\":\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((6),cljs.core.count(parse_svg_path.main.parse_params(params)));\n\nbreak;\ncase \"A\":\ncase \"a\":\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((7),cljs.core.count(parse_svg_path.main.parse_params(params)));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__32347)].join('')));\n\n}\n});\nparse_svg_path.main.valid_path_QMARK_ = (function parse_svg_path$main$valid_path_QMARK_(s){\nreturn cljs.core.every_QMARK_((function (p1__32348_SHARP_){\nreturn parse_svg_path.main.valid_segment_QMARK_(new cljs.core.Keyword(null,\"segment\",\"segment\",-964921196).cljs$core$IFn$_invoke$arity$1(p1__32348_SHARP_));\n}),cljs.spec.alpha.conform(new cljs.core.Keyword(\"parse-svg-path.main\",\"path\",\"parse-svg-path.main/path\",516846111),cljs.core.seq(s)));\n});\nparse_svg_path.main.svg_path = (function parse_svg_path$main$svg_path(var_args){\nvar G__32351 = arguments.length;\nswitch (G__32351) {\ncase 1:\nreturn parse_svg_path.main.svg_path.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 3:\nreturn parse_svg_path.main.svg_path.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(parse_svg_path.main.svg_path.cljs$core$IFn$_invoke$arity$1 = (function (svg){\nreturn parse_svg_path.main.svg_path.cljs$core$IFn$_invoke$arity$3(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__32352){\nvar vec__32353 = p__32352;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32353,(0),null);\nvar t = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32353,(1),null);\nvar c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32353,(2),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [t,parse_svg_path.main.parse_params(c)], null);\n}),cljs.core.re_seq(/([MLQVHCZz])\\s*(((([0-9\\.\\-]+)\\,?){2}\\s*){0,3})/,svg)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0)], null));\n}));\n\n(parse_svg_path.main.svg_path.cljs$core$IFn$_invoke$arity$3 = (function (p__32356,p0,pc){\nwhile(true){\nvar vec__32357 = p__32356;\nvar seq__32358 = cljs.core.seq(vec__32357);\nvar first__32359 = cljs.core.first(seq__32358);\nvar seq__32358__$1 = cljs.core.next(seq__32358);\nvar vec__32360 = first__32359;\nvar type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32360,(0),null);\nvar points = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32360,(1),null);\nvar seg = vec__32360;\nvar more = seq__32358__$1;\nif(cljs.core.truth_(seg)){\nvar G__32363 = type;\nswitch (G__32363) {\ncase \"M\":\nvar p = cljs.core.first(points);\nvar G__32378 = more;\nvar G__32379 = p;\nvar G__32380 = p;\np__32356 = G__32378;\np0 = G__32379;\npc = G__32380;\ncontinue;\n\nbreak;\ncase \"L\":\ncase \"V\":\ncase \"H\":\nvar p = cljs.core.first(points);\nreturn (new cljs.core.LazySeq(null,((function (p__32356,p0,pc,p,G__32363,vec__32357,seq__32358,first__32359,seq__32358__$1,vec__32360,type,points,seg,more){\nreturn (function (){\nreturn cljs.core.cons(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"points\",\"points\",-1486596883),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pc,p], null)], null),parse_svg_path.main.svg_path.cljs$core$IFn$_invoke$arity$3(more,p0,p));\n});})(p__32356,p0,pc,p,G__32363,vec__32357,seq__32358,first__32359,seq__32358__$1,vec__32360,type,points,seg,more))\n,null,null));\n\nbreak;\ncase \"C\":\ncase \"Q\":\nvar p = cljs.core.last(points);\nreturn (new cljs.core.LazySeq(null,((function (p__32356,p0,pc,p,G__32363,vec__32357,seq__32358,first__32359,seq__32358__$1,vec__32360,type,points,seg,more){\nreturn (function (){\nreturn cljs.core.cons(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"bezier\",\"bezier\",-539235327),new cljs.core.Keyword(null,\"points\",\"points\",-1486596883),cljs.core.cons(pc,points)], null),parse_svg_path.main.svg_path.cljs$core$IFn$_invoke$arity$3(more,p0,p));\n});})(p__32356,p0,pc,p,G__32363,vec__32357,seq__32358,first__32359,seq__32358__$1,vec__32360,type,points,seg,more))\n,null,null));\n\nbreak;\ncase \"Z\":\ncase \"z\":\nreturn (new cljs.core.LazySeq(null,((function (p__32356,p0,pc,G__32363,vec__32357,seq__32358,first__32359,seq__32358__$1,vec__32360,type,points,seg,more){\nreturn (function (){\nreturn cljs.core.cons(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"close\",\"close\",1835149582),new cljs.core.Keyword(null,\"points\",\"points\",-1486596883),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pc,p0], null)], null),parse_svg_path.main.svg_path.cljs$core$IFn$_invoke$arity$3(more,p0,p0));\n});})(p__32356,p0,pc,G__32363,vec__32357,seq__32358,first__32359,seq__32358__$1,vec__32360,type,points,seg,more))\n,null,null));\n\nbreak;\ndefault:\nreturn [\"Unsupported path segment type: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(type)].join('');\n\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}));\n\n(parse_svg_path.main.svg_path.cljs$lang$maxFixedArity = 3);\n\nparse_svg_path.main.all_vals = (function parse_svg_path$main$all_vals(s){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(parseFloat,cljs.core.re_seq(/\\d+\\.?\\d*|\\d*\\.?\\d+/,s));\n});\nparse_svg_path.main.x_val = (function parse_svg_path$main$x_val(p__32364){\nvar vec__32365 = p__32364;\nvar command = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32365,(0),null);\nvar params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32365,(1),null);\nvar G__32368 = command;\nswitch (G__32368) {\ncase \"C\":\ncase \"S\":\ncase \"Q\":\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(params,(2));\n\nbreak;\ncase \"A\":\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(params,(5));\n\nbreak;\ncase \"V\":\nreturn null;\n\nbreak;\ndefault:\nreturn cljs.core.first(params);\n\n}\n});\nparse_svg_path.main.y_val = (function parse_svg_path$main$y_val(p__32369){\nvar vec__32370 = p__32369;\nvar command = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32370,(0),null);\nvar params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32370,(1),null);\nvar G__32373 = command;\nswitch (G__32373) {\ncase \"C\":\ncase \"S\":\ncase \"Q\":\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(params,(3));\n\nbreak;\ncase \"A\":\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(params,(6));\n\nbreak;\ncase \"H\":\nreturn null;\n\nbreak;\ndefault:\nreturn cljs.core.second(params);\n\n}\n});\nparse_svg_path.main.dimensions = (function parse_svg_path$main$dimensions(s){\nvar path = parse_svg_path.main.svg_path.cljs$core$IFn$_invoke$arity$1(s);\nvar x_vals = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(parse_svg_path.main.x_val,path));\nvar y_vals = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(parse_svg_path.main.y_val,path));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.max,x_vals) - cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.min,x_vals)),(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.max,y_vals) - cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.min,y_vals))], null);\n});\nparse_svg_path.main.app = (function parse_svg_path$main$app(){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"div\",\"div\",1057191632),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"style\",\"style\",-496642736),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"margin\",\"margin\",-995903681),\"auto\",new cljs.core.Keyword(null,\"width\",\"width\",-384071477),\"1000px\"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"h1\",\"h1\",-1896887462),\"SVG Path Editor\"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"textarea\",\"textarea\",-650375824),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"rows\",\"rows\",850049680),((2) + (cljs.core.count(cljs.core.deref(parse_svg_path.main.path)) / (60))),new cljs.core.Keyword(null,\"cols\",\"cols\",-1914801295),(60),new cljs.core.Keyword(null,\"value\",\"value\",305978217),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(parse_svg_path.main.textbox)),new cljs.core.Keyword(null,\"on-change\",\"on-change\",-732046149),(function (p1__32374_SHARP_){\nif(parse_svg_path.main.valid_path_QMARK_(cljs.core.deref(parse_svg_path.main.textbox))){\ncljs.core.reset_BANG_(parse_svg_path.main.path,p1__32374_SHARP_.target.value);\n} else {\n}\n\nreturn cljs.core.reset_BANG_(parse_svg_path.main.textbox,p1__32374_SHARP_.target.value);\n})], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"svg\",\"svg\",856789142),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"width\",\"width\",-384071477),(1000),new cljs.core.Keyword(null,\"view-box\",\"view-box\",-1792199155),\"0 0 1000 1000\"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"path\",\"path\",-188191168),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"fill\",\"fill\",883462889),\"#ffaa00\",new cljs.core.Keyword(null,\"d\",\"d\",1972142424),cljs.core.deref(parse_svg_path.main.path)], null)], null)], null)], null);\n});\nparse_svg_path.main.start = (function parse_svg_path$main$start(){\nreturn reagent.core.render.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [parse_svg_path.main.app], null),document.getElementById(\"app\"));\n});\nparse_svg_path.main.init = (function parse_svg_path$main$init(){\nreturn parse_svg_path.main.start();\n});\ngoog.exportSymbol('parse_svg_path.main.init', parse_svg_path.main.init);\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","parse_svg_path/main.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",24],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$parse-svg-path.main","~:op","~:ns","~:imports",null,"~:requires",["^ ","^>","^?","~$parse-svg-path.latex","^M","~$reagent.core","^N","~$r","^N","~$cljs.core","^O","~$goog","^P","~$latex","^M","~$s","^?","~$str","~$clojure.string","^S","^S","^?","^?"],"~:seen",["^F",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^O","^O","^>","^?","^N","^N","~$r","^N","~$s","^?","^?","^?"],"~:form",["~#list",["~$ns","^H",["^Y",["^U",["^>","~:as","~$s"],["^N","^[","~$r"],["^S","^[","^R"],["^M","^[","^Q"]]]]],"~:flags",["^ ","^U",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^P","^O","^?","^N","^S","^M"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","parse_svg_path/main.cljs"],"~:compiled-at",1579002275629,"~:resource-name","parse_svg_path/main.cljs","~:warnings",[],"~:source","(ns parse-svg-path.main\n  (:require\n   [clojure.spec.alpha :as s]\n   [reagent.core :as r]\n   [clojure.string :as str]\n   [parse-svg-path.latex :as latex]))\n\n(defonce path (r/atom \"M89 629Q89 663 116 684T171 705Q215 705 237 681T260 634Q260 619 233 434T204 244Q201 237 175 237Q150 237 146 244Q144 248 117 433T89 629ZM90 86Q90 125 116 148T177 171Q211 169 235 146T259 86Q259 48 235 25T175 1Q138 1 114 24T90 86Z\"))\n(defonce textbox (r/atom @path))\n\n(def svg-path-commands\n  {:move-to (set \"Mm\")\n   :line-to (set \"LlHhVv\")\n   :cubic-bezier (set \"CcSs\")\n   :quadratic-bezier (set \"QqTt\")\n   :arc (set \"Aa\")\n   :close-path (set \"Zz\")})\n\n(s/def ::path\n       (s/+\n        (s/cat :segment\n               (s/cat\n                :command (set \"MmLlHhVvCcSsQqTtAaZz\")\n                :params (s/* (set \"0123456789 .-,\"))))))\n\n(defn parse-commands \n  \"Splits an SVG path string into a sequence of commands\"\n  [s]\n  (str/split s #\"(?=[A-Z])\"))\n\n(defn parse-params [v]\n  (->> v\n       (apply str)\n       (re-seq #\"[0-9\\.\\-\\+]+\")\n       (map js/parseFloat)))\n\n(defn valid-segment? [{:keys [command params]}]\n  (case command\n    (\"Z\" \"z\") (= 0 (count (parse-params params)))\n    (\"H\" \"h\" \"V\" \"v\") (= 1 (count (parse-params params)))\n    (\"M\" \"m\" \"T\" \"t\" \"L\" \"l\") (= 2 (count (parse-params params)))\n    (\"Q\" \"q\" \"S\" \"s\") (= 4 (count (parse-params params)))\n    (\"C\" \"c\") (= 6 (count (parse-params params)))\n    (\"A\" \"a\") (= 7 (count (parse-params params)))))\n\n(defn valid-path? [s]\n  (every? #(valid-segment? (:segment %)) (s/conform ::path (seq s))))\n\n(comment\n   (count (parse-params [\"8\" \"9\" \" \" \"6\" \"2\" \"9\"]))\n    (every? #(valid-segment? (:segment %)) (s/conform ::path (seq @textbox)))\n  [{:segment {:command \"M\", :params [\"8\" \"9\" \" \" \"6\" \"2\" \"9\"]}} {:segment {:command \"Q\", :params [\"8\" \"9\" \" \" \"6\" \"6\" \"3\" \" \" \"1\" \"1\" \"6\" \" \" \"6\" \"8\" \"4\"]}} {:segment {:command \"T\", :params [\"1\" \"7\" \"1\" \" \" \"7\" \"0\" \"5\"]}} {:segment {:command \"Q\", :params [\"2\" \"1\" \"5\" \" \" \"7\" \"0\" \"5\" \" \" \"2\" \"3\" \"7\" \" \" \"6\" \"8\" \"1\"]}} {:segment {:command \"T\", :params [\"2\" \"6\" \"0\" \" \" \"6\" \"3\" \"4\"]}} {:segment {:command \"Q\", :params [\"2\" \"6\" \"0\" \" \" \"6\" \"1\" \"9\" \" \" \"2\" \"3\" \"3\" \" \" \"4\" \"3\" \"4\"]}} {:segment {:command \"T\", :params [\"2\" \"0\" \"4\" \" \" \"2\" \"4\" \"4\"]}} {:segment {:command \"Q\", :params [\"2\" \"0\" \"1\" \" \" \"2\" \"3\" \"7\" \" \" \"1\" \"7\" \"5\" \" \" \"2\" \"3\" \"7\"]}} {:segment {:command \"Q\", :params [\"1\" \"5\" \"0\" \" \" \"2\" \"3\" \"7\" \" \" \"1\" \"4\" \"6\" \" \" \"2\" \"4\" \"4\"]}} {:segment {:command \"Q\", :params [\"1\" \"4\" \"4\" \" \" \"2\" \"4\" \"8\" \" \" \"1\" \"1\" \"7\" \" \" \"4\" \"3\" \"3\"]}} {:segment {:command \"T\", :params [\"8\" \"9\" \" \" \"6\" \"2\" \"9\"]}} {:segment {:command \"Z\"}} {:segment {:command \"M\", :params [\"9\" \"0\" \" \" \"8\" \"6\"]}} {:segment {:command \"Q\", :params [\"9\" \"0\" \" \" \"1\" \"2\" \"5\" \" \" \"1\" \"1\" \"6\" \" \" \"1\" \"4\" \"8\"]}} {:segment {:command \"T\", :params [\"1\" \"7\" \"7\" \" \" \"1\" \"7\" \"1\"]}} {:segment {:command \"Q\", :params [\"2\" \"1\" \"1\" \" \" \"1\" \"6\" \"9\" \" \" \"2\" \"3\" \"5\" \" \" \"1\" \"4\" \"6\"]}} {:segment {:command \"T\", :params [\"2\" \"5\" \"9\" \" \" \"8\" \"6\"]}} {:segment {:command \"Q\", :params [\"2\" \"5\" \"9\" \" \" \"4\" \"8\" \" \" \"2\" \"3\" \"5\" \" \" \"2\" \"5\"]}} {:segment {:command \"T\", :params [\"1\" \"7\" \"5\" \" \" \"1\"]}} {:segment {:command \"Q\", :params [\"1\" \"3\" \"8\" \" \" \"1\" \" \" \"1\" \"1\" \"4\" \" \" \"2\" \"4\"]}} {:segment {:command \"T\", :params [\"9\" \"0\" \" \" \"8\" \"6\"]}} {:segment {:command \"Z\"}}])\n\n(defn svg-path\n  ([svg]\n   (svg-path\n    (->> svg\n         (re-seq #\"([MLQVHCZz])\\s*(((([0-9\\.\\-]+)\\,?){2}\\s*){0,3})\")\n         (map (fn [[_ t c]]\n                [t (parse-params c)])))\n    [0 0] [0 0]))\n  ([[[type points :as seg] & more] p0 pc]\n   (when seg\n     (case type\n       \"M\"\n       (let [p (first points)] (recur more p p))\n       (\"L\" \"V\" \"H\")\n       (let [p (first points)]\n         (lazy-seq (cons {:type   :line\n                          :points [pc p]}\n                         (svg-path more p0 p))))\n       (\"C\" \"Q\")\n       (let [p (last points)]\n         (lazy-seq (cons {:type   :bezier\n                          :points (cons pc points)}\n                         (svg-path more p0 p))))\n       (\"Z\" \"z\")\n       (lazy-seq (cons {:type   :close\n                        :points [pc p0]}\n                       (svg-path more p0 p0)))\n       (str \"Unsupported path segment type: \" type)))))\n\n(defn all-vals [s]\n  (map js/parseFloat (re-seq #\"\\d+\\.?\\d*|\\d*\\.?\\d+\" s)))\n\n(defn x-val [[command params]]\n  (case command\n    (\"C\" \"S\" \"Q\") (nth params 2)\n    \"A\" (nth params 5)\n    \"V\" nil\n    (first params)))\n\n(defn y-val [[command params]]\n  (case command\n    (\"C\" \"S\" \"Q\") (nth params 3)\n    \"A\" (nth params 6)\n    \"H\" nil\n    (second params)))\n\n(defn dimensions [s]\n  (let [path (svg-path s)\n        x-vals (remove nil? (map x-val path))\n        y-vals (remove nil? (map y-val path))]\n    [(- (apply max x-vals) (apply min x-vals))\n     (- (apply max y-vals) (apply min y-vals))]))\n\n(comment\n  (svg-path @path)\n  (update [23 56 23 45] 2 inc)\n  (dimensions @path)\n  '([\"M\" (132 523)] [\"Q\" (98 523 98 490)] [\"V\" (479)] [\"L\" (111 451)] [\"Q\" (186 293 220 178)] [\"L\" (228 154)] [\"H\" (196)] [\"Q\" (158 154 142 157)] [\"T\" (103 176)] [\"Q\" (92 183 81 194)] [\"T\" (62 215 53 227)] [\"Q\" (51 228 38 228 19 228 19 218 19 212 38 183)] [\"T\" (93 121 164 83)] [\"Q\" (171 81 389 81 549 81 553 82 573 89 573 110 573 141 541 152 535 154 472 154)] [\"H\" (408)] [\"L\" (405 171)] [\"Q\" (393 243 393 290 393 342 402 383)] [\"T\" (421 447 431 475)] [\"Q\" (431 492 417 507)] [\"T\" (381 522)] [\"Q\" (370 522 363 519)] [\"T\" (347 495 331 435)] [\"Q\" (330 426 330 391 330 342 339 286)] [\"T\" (357 194 367 154)] [\"H\" (269)] [\"L\" (268 158)] [\"Q\" (268 161 249 237)] [\"T\" (206 398 175 495)] [\"Q\" (164 523 132 523)] [\"Z\" ()])\n  (vals latex/l)\n  )\n\n(defn app []\n  [:div {:style {:margin \"auto\"\n                 :width  \"1000px\"}}\n   [:h1 \"SVG Path Editor\"]\n   #_(let [[width height] (dimensions @path)]\n     [:div\n      [:p (str  width \" x \" height)]])\n   [:textarea\n    {:rows      (+ 2 (/ (count @path) 60))\n     :cols      60\n     :value     (str @textbox)\n     :on-change #(do (when (valid-path? @textbox)\n                       (reset! path (-> % .-target .-value)))\n                   (reset! textbox (-> % .-target .-value)))}]\n   [:svg {:width    1000\n          :view-box \"0 0 1000 1000\"}\n    [:path {:fill \"#ffaa00\"\n            :d    @path}]]])\n\n(defn ^:dev/after-load start []\n  (r/render [app]\n            (.getElementById js/document \"app\")))\n\n(defn ^:export init []\n  (start))","~:reader-features",["^F",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["js/parse-svg-path","js/parse-svg-path.main","js/parse-svg-path.main.path","parse-svg-path.main/path","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","js/parse-svg-path.main.textbox","parse-svg-path.main/textbox","cljs.core/deref","parse-svg-path.main/svg-path-commands","cljs.core/set","cljs.spec.alpha/def-impl","cljs.spec.alpha/rep+impl","cljs.spec.alpha/cat-impl","cljs.spec.alpha/rep-impl","parse-svg-path.main/parse-commands","s","clojure.string.split.cljs$core$IFn$_invoke$arity$2","parse-svg-path.main/parse-params","v","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/str","cljs.core/re-seq","cljs.core.map.cljs$core$IFn$_invoke$arity$2","js/parseFloat","p__32344","map__32345","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","parse-svg-path.main/valid-segment?","command","params","G__32347","js/Error","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/count","parse-svg-path.main/valid-path?","p1__32348#","cljs.core/every?","cljs.spec.alpha/conform","cljs.core/seq","var_args","G__32351","parse-svg-path.main/svg-path","p__32356","vec__32357","seq__32358","first__32359","cljs.core/first","cljs.core/next","vec__32360","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","svg","parse_svg_path.main.svg_path.cljs$core$IFn$_invoke$arity$3","p__32352","vec__32353","_","t","c","type","points","seg","more","p0","pc","G__32363","p","cljs.core/LazySeq","cljs.core/cons","cljs.core/last","parse-svg-path.main/all-vals","p__32364","vec__32365","parse-svg-path.main/x-val","G__32368","cljs.core.nth.cljs$core$IFn$_invoke$arity$2","p__32369","vec__32370","parse-svg-path.main/y-val","G__32373","cljs.core/second","parse-svg-path.main/dimensions","path","parse_svg_path.main.svg_path.cljs$core$IFn$_invoke$arity$1","x-vals","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core/nil?","y-vals","cljs.core/max","cljs.core/min","p1__32374#","parse-svg-path.main/app","cljs.core/reset!","parse-svg-path.main/start","reagent.core.render.cljs$core$IFn$_invoke$arity$2","js/document","parse-svg-path.main/init"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1576480117000,1576480117000,499162500000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^14","reagent/impl/batching.cljs"],[1576912510956,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^O","~$reagent.debug","~$reagent.impl.util"]]],["^14","goog/dom/tagname.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","~$goog.dom.HtmlElement"]]],["^14","cljs/spec/gen/alpha.cljs"],[1575939134240,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^O","~$goog.Uri"]]],["^14","goog/math/math.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","~$goog.array","~$goog.asserts"]]],["^14","goog/html/trustedtypes.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P"]]],["^14","goog/labs/useragent/browser.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1M","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^14","goog/html/safeurl.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1N","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^1Q"]]],["^14","goog/array/array.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1N"]]],["^1A","node_modules/prop-types/checkPropTypes.js"],[1576480117000,1576480117000,1549836454000,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^1F","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^14","reagent/impl/util.cljs"],[1576912510956,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^O","^1I","^S"]]],["^14","goog/debug/error.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P"]]],["^14","goog/dom/nodetype.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P"]]],["^1A","node_modules/scheduler/cjs/scheduler.development.js"],[1576480117000,1576480117000,499162500000,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^1F"]]],["^14","reagent/ratom.cljs"],[1576912510956,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^O","^1J","^1I","~$reagent.impl.batching","~$clojure.set","^1P"]]],["^1A","node_modules/scheduler/cjs/scheduler.production.min.js"],[1576480117000,1576480117000,499162500000,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^1F"]]],["^14","goog/string/typedstring.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P"]]],["^1A","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1576480117000,1576480117000,499162500000,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^1F"]]],["^1A","node_modules/react/index.js"],[1576480117000,1576480117000,499162500000,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^1F","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^14","shadow/js.js"],[1576480117002,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P"]]],["^14","goog/object/object.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P"]]],["^14","reagent/impl/template.cljs"],[1576912510956,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^O","^A","^S","~$clojure.walk","^1J","~$reagent.impl.component","^1Y","~$reagent.ratom","^1I","^1P"]]],["^14","goog/dom/asserts.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1N"]]],["^1A","node_modules/react-dom/cjs/react-dom.production.min.js"],[1576480117000,1576480117000,499162500000,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^1F","^A","~$module$node_modules$object_assign$index","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1576480117000,1575939134000],["^1A","node_modules/react/cjs/react.development.js"],[1576480117000,1576480117000,499162500000,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^1F","^24","~$module$node_modules$prop_types$checkPropTypes"]]],["^14","goog/math/long.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1N","~$goog.reflect"]]],["^14","goog/html/trustedresourceurl.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1N","~$goog.html.trustedtypes","^1T","^1U","^1V","^1W"]]],["^14","goog/string/internal.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P"]]],["^1A","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1576480117000,1576480117000,499162500000,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^1F"]]],["^14","goog/functions/functions.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P"]]],["^14","goog/html/safestyle.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1M","^1N","~$goog.html.SafeUrl","^1V","^1W","^1Q"]]],["^14","goog/dom/safe.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1N","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2:","^1S","~$goog.html.uncheckedconversions","^1V","^1Q"]]],["^14","reagent/impl/component.cljs"],[1576912510956,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^O","^1P","^A","^1J","^1Y","^23","^1I"]]],["^14","clojure/walk.cljs"],[1575939134240,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^O"]]],["^14","goog/structs/map.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^14","goog/html/safehtml.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1M","^1N","~$goog.dom.TagName","~$goog.dom.tags","^2>","^2?","~$goog.html.SafeStyleSheet","^2:","^1S","^29","^1T","^1U","~$goog.labs.userAgent.browser","^1P","^1V","^1W","^1Q"]]],["^14","goog/dom/tags.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1P"]]],["^1A","node_modules/scheduler/index.js"],[1576480117000,1576480117000,499162500000,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^1F","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^14","parse_svg_path/latex.cljs"],[1578897952441,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^O"]]],["^14","goog/asserts/asserts.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^14","goog/uri/uri.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1M","^1N","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^14","goog/i18n/bidi.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P"]]],["^1A","node_modules/object-assign/index.js"],[1576480117000,1576480117000,1484580833000,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^1F"]]],["^14","cljs/spec/alpha.cljs"],[1575939134240,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^O","^1P","^21","~$cljs.spec.gen.alpha","^S"]]],["^14","goog/fs/url.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P"]]],["^14","goog/base.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",[]]],["^14","goog/structs/structs.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1M","^1P"]]],["^14","clojure/string.cljs"],[1575939134240,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^O","^2K","~$goog.string.StringBuffer"]]],["^1A","node_modules/react/cjs/react.production.min.js"],[1576480117000,1576480117000,499162500000,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^1F","^24"]]],["^14","parse_svg_path/main.cljs"],[1579002271929,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^O","^?","^N","^S","^M"]]],["^14","goog/string/string.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","~$goog.dom.safe","^2@","^1V","^1Q"]]],["^14","goog/reflect/reflect.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P"]]],["^14","goog/labs/useragent/util.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1Q"]]],["^14","reagent/core.cljs"],[1576912510956,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^O","^A","~$reagent.impl.template","^22","^1J","^1Y","^23","^1I","~$reagent.dom"]]],["^14","goog/string/stringbuffer.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P"]]],["^14","goog/iter/iter.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1M","^1N","^2<","~$goog.math"]]],["^14","goog/html/uncheckedconversions.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1N","^2=","^2>","^2?","^2E","^2:","^1S","^1V","^1Q"]]],["^14","reagent/dom.cljs"],[1576912510956,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^O","^C","^1J","^2T","^1Y","^23","^1I"]]],["^1A","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1576480117000,1576480117000,1549571078000,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^1F"]]],["^14","goog/dom/htmlelement.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P"]]],["^14","cljs/core.cljs"],[1575939134240,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["~$goog.math.Long","~$goog.math.Integer","^2K","^1P","^1M","^1L","^2R"]]],["^14","goog/html/safescript.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1N","^29","^1V","^1W"]]],["^14","reagent/debug.cljs"],[1576912510956,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^O"]]],["^14","goog/html/safestylesheet.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1M","^1N","^2?","^1P","^1V","^1W","^1Q"]]],["^14","goog/math/integer.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^28"]]],["^1A","node_modules/scheduler/tracing.js"],[1576480117000,1576480117000,499162500000,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^1F","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^1A","node_modules/react-dom/cjs/react-dom.development.js"],[1576480117000,1576480117000,499162500000,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^1F","^A","^24","^25","^27","~$module$node_modules$scheduler$tracing"]]],["^14","clojure/set.cljs"],[1575939134240,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^O"]]],["^14","goog/uri/utils.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1M","^1N","^2K"]]],["^14","goog/string/const.js"],[1574743498088,"^1B",["^ ","^1C",null,"^1D",["^F",[]],"^1E",["^P","^1N","^1W"]]]]],"~:clj-info",["^ ","jar:file:/home/porky/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/spec/alpha.cljc",1575939134000,"jar:file:/home/porky/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1575939134000,"jar:file:/home/porky/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1575939134000,"jar:file:/home/porky/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/walk.clj",1572766019000,"jar:file:/home/porky/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1572766019000,"jar:file:/home/porky/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1572628395000,"jar:file:/home/porky/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1574169245000,"jar:file:/home/porky/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/spec/gen/alpha.cljc",1575939134000,"jar:file:/home/porky/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1572766019000,"jar:file:/home/porky/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1572766019000,"jar:file:/home/porky/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1572766019000,"jar:file:/home/porky/.m2/repository/reagent/reagent/0.9.0-rc4/reagent-0.9.0-rc4.jar!/reagent/ratom.clj",1576912510000,"jar:file:/home/porky/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1575939134000,"jar:file:/home/porky/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1575939134000,"jar:file:/home/porky/.m2/repository/reagent/reagent/0.9.0-rc4/reagent-0.9.0-rc4.jar!/reagent/debug.clj",1576912510000,"jar:file:/home/porky/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1574169245000,"jar:file:/home/porky/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1575939134000,"jar:file:/home/porky/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1575939134000,"jar:file:/home/porky/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1574169245000,"jar:file:/home/porky/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1575939134000,"jar:file:/home/porky/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1574169245000,"jar:file:/home/porky/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1572766019000,"jar:file:/home/porky/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1575939134000,"jar:file:/home/porky/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1575939134000,"jar:file:/home/porky/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1575939134000,"jar:file:/home/porky/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1575939134000,"jar:file:/home/porky/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1572766019000,"jar:file:/home/porky/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1572766019000,"jar:file:/home/porky/.m2/repository/reagent/reagent/0.9.0-rc4/reagent-0.9.0-rc4.jar!/reagent/core.clj",1576912510000,"jar:file:/home/porky/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1574169245000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","parse_svg_path/main.cljs","^7",1,"^8",5,"^9",1,"^:",24],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^>","^?","^M","^M","^N","^N","~$r","^N","^O","^O","^P","^P","^Q","^M","~$s","^?","^R","^S","^S","^S","^?","^?"],"^T",["^F",["^U"]],"~:shadow/js-access-global",["^F",["parseFloat","document","Error"]],"^V",null,"~:defs",["^ ","~$textbox",["^ ","^G","~$parse-svg-path.main/textbox","^6","parse_svg_path/main.cljs","^7",9,"^8",1,"^9",9,"^:",17,"^5",["^ ","^6","parse_svg_path/main.cljs","^7",9,"^8",10,"^9",9,"^:",17],"~:tag","~$reagent.ratom/RAtom"],"~$valid-path?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","parse_svg_path/main.cljs","^7",46,"^8",7,"^9",46,"^:",18,"~:arglists",["^Y",["~$quote",["^Y",[["~$s"]]]]]],"^G","~$parse-svg-path.main/valid-path?","^6","parse_svg_path/main.cljs","^:",18,"~:method-params",["^Y",[["~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^Y",[null,null]],"^8",1,"~:variadic?",false,"^7",46,"~:ret-tag","~$boolean","^9",46,"~:max-fixed-arity",1,"~:fn-var",true,"^3X",["^Y",["^3Y",["^Y",[["~$s"]]]]]],"~$all-vals",["^ ","^3W",null,"^5",["^ ","^6","parse_svg_path/main.cljs","^7",83,"^8",7,"^9",83,"^:",15,"^3X",["^Y",["^3Y",["^Y",[["~$s"]]]]]],"^G","~$parse-svg-path.main/all-vals","^6","parse_svg_path/main.cljs","^:",15,"^3[",["^Y",[["~$s"]]],"^40",null,"^41",["^Y",[null,null]],"^8",1,"^42",false,"^7",83,"^43","~$cljs.core/LazySeq","^9",83,"^45",1,"^46",true,"^3X",["^Y",["^3Y",["^Y",[["~$s"]]]]]],"~$svg-path",["^ ","^3W",null,"^5",["^ ","^6","parse_svg_path/main.cljs","^7",54,"^8",7,"^9",54,"^:",15,"^3X",["^Y",["^3Y",["^Y",[["~$svg"],[[["~$type","~$points","^[","~$seg"],"~$&","~$more"],"~$p0","~$pc"]]]]],"~:top-fn",["^ ","^42",false,"~:fixed-arity",3,"^45",3,"^3[",["^Y",[["^4;"],[[["^4<","^4=","^[","^4>"],"~$&","^4?"],"^4@","^4A"]]],"^3X",["^Y",[["^4;"],[[["^4<","^4=","^[","^4>"],"~$&","^4?"],"^4@","^4A"]]],"^41",["^Y",[null,null]]]],"^G","~$parse-svg-path.main/svg-path","^6","parse_svg_path/main.cljs","^:",15,"^4B",["^ ","^42",false,"^4C",3,"^45",3,"^3[",["^Y",[["^4;"],[[["^4<","^4=","^[","^4>"],"~$&","^4?"],"^4@","^4A"]]],"^3X",["^Y",[["^4;"],[[["^4<","^4=","^[","^4>"],"~$&","^4?"],"^4@","^4A"]]],"^41",["^Y",[null,null]]],"^3[",["^Y",[["^4;"],[[["^4<","^4=","^[","^4>"],"~$&","^4?"],"^4@","^4A"]]],"^40",null,"^4C",3,"^41",["^Y",[null,null]],"^8",1,"^42",false,"~:methods",[["^ ","^4C",1,"^42",false,"^3T","~$any"],["^ ","^4C",3,"^42",false,"^3T",["^F",[null,"~$clj-nil"]]]],"^7",54,"^9",54,"^45",3,"^46",true,"^3X",["^Y",[["^4;"],[[["^4<","^4=","^[","^4>"],"~$&","^4?"],"^4@","^4A"]]]],"~$path",["^ ","^G","~$parse-svg-path.main/path","^6","parse_svg_path/main.cljs","^7",8,"^8",1,"^9",8,"^:",14,"^5",["^ ","^6","parse_svg_path/main.cljs","^7",8,"^8",10,"^9",8,"^:",14],"^3T","^3U"],"~$svg-path-commands",["^ ","^G","~$parse-svg-path.main/svg-path-commands","^6","parse_svg_path/main.cljs","^7",11,"^8",1,"^9",11,"^:",23,"^5",["^ ","^6","parse_svg_path/main.cljs","^7",11,"^8",6,"^9",11,"^:",23],"^3T","~$cljs.core/IMap"],"~$init",["^ ","^3W",null,"^5",["^ ","^6","parse_svg_path/main.cljs","^7",138,"^8",16,"^9",138,"^:",20,"~:export",true,"^3X",["^Y",["^3Y",["^Y",[[]]]]]],"^G","~$parse-svg-path.main/init","^6","parse_svg_path/main.cljs","^:",20,"^3[",["^Y",[[]]],"^40",null,"^4N",true,"^41",["^Y",[null,null]],"^8",1,"^42",false,"^7",138,"^43","^4F","^9",138,"^45",0,"^46",true,"^3X",["^Y",["^3Y",["^Y",[[]]]]]],"~$start",["^ ","^3W",null,"^5",["^ ","^6","parse_svg_path/main.cljs","^7",134,"^8",24,"^9",134,"^:",29,"~:dev/after-load",true,"^3X",["^Y",["^3Y",["^Y",[[]]]]]],"^G","~$parse-svg-path.main/start","^6","parse_svg_path/main.cljs","^:",29,"^3[",["^Y",[[]]],"^40",null,"^41",["^Y",[null,null]],"^8",1,"^42",false,"^4Q",true,"^7",134,"^43","^4F","^9",134,"^45",0,"^46",true,"^3X",["^Y",["^3Y",["^Y",[[]]]]]],"~$parse-params",["^ ","^3W",null,"^5",["^ ","^6","parse_svg_path/main.cljs","^7",31,"^8",7,"^9",31,"^:",19,"^3X",["^Y",["^3Y",["^Y",[["~$v"]]]]]],"^G","~$parse-svg-path.main/parse-params","^6","parse_svg_path/main.cljs","^:",19,"^3[",["^Y",[["~$v"]]],"^40",null,"^41",["^Y",[null,null]],"^8",1,"^42",false,"^7",31,"^43","^49","^9",31,"^45",1,"^46",true,"^3X",["^Y",["^3Y",["^Y",[["~$v"]]]]]],"~$dimensions",["^ ","^3W",null,"^5",["^ ","^6","parse_svg_path/main.cljs","^7",100,"^8",7,"^9",100,"^:",17,"^3X",["^Y",["^3Y",["^Y",[["~$s"]]]]]],"^G","~$parse-svg-path.main/dimensions","^6","parse_svg_path/main.cljs","^:",17,"^3[",["^Y",[["~$s"]]],"^40",null,"^41",["^Y",[null,null]],"^8",1,"^42",false,"^7",100,"^43","~$cljs.core/IVector","^9",100,"^45",1,"^46",true,"^3X",["^Y",["^3Y",["^Y",[["~$s"]]]]]],"~$x-val",["^ ","^3W",null,"^5",["^ ","^6","parse_svg_path/main.cljs","^7",86,"^8",7,"^9",86,"^:",12,"^3X",["^Y",["^3Y",["^Y",[[["~$command","~$params"]]]]]]],"^G","~$parse-svg-path.main/x-val","^6","parse_svg_path/main.cljs","^:",12,"^3[",["^Y",[["~$p__32364"]]],"^40",null,"^41",["^Y",[null,null]],"^8",1,"^42",false,"^7",86,"^9",86,"^45",1,"^46",true,"^3X",["^Y",["^3Y",["^Y",[[["^4Y","^4Z"]]]]]]],"~$valid-segment?",["^ ","^3W",null,"^5",["^ ","^6","parse_svg_path/main.cljs","^7",37,"^8",7,"^9",37,"^:",21,"^3X",["^Y",["^3Y",["^Y",[[["^ ","~:keys",["^4Y","^4Z"]]]]]]]],"^G","~$parse-svg-path.main/valid-segment?","^6","parse_svg_path/main.cljs","^:",21,"^3[",["^Y",[["~$p__32344"]]],"^40",null,"^41",["^Y",[null,null]],"^8",1,"^42",false,"^7",37,"^9",37,"^45",1,"^46",true,"^3X",["^Y",["^3Y",["^Y",[[["^ ","^52",["^4Y","^4Z"]]]]]]]],"~$y-val",["^ ","^3W",null,"^5",["^ ","^6","parse_svg_path/main.cljs","^7",93,"^8",7,"^9",93,"^:",12,"^3X",["^Y",["^3Y",["^Y",[[["^4Y","^4Z"]]]]]]],"^G","~$parse-svg-path.main/y-val","^6","parse_svg_path/main.cljs","^:",12,"^3[",["^Y",[["~$p__32369"]]],"^40",null,"^41",["^Y",[null,null]],"^8",1,"^42",false,"^7",93,"^9",93,"^45",1,"^46",true,"^3X",["^Y",["^3Y",["^Y",[[["^4Y","^4Z"]]]]]]],"~$app",["^ ","^3W",null,"^5",["^ ","^6","parse_svg_path/main.cljs","^7",115,"^8",7,"^9",115,"^:",10,"^3X",["^Y",["^3Y",["^Y",[[]]]]]],"^G","~$parse-svg-path.main/app","^6","parse_svg_path/main.cljs","^:",10,"^3[",["^Y",[[]]],"^40",null,"^41",["^Y",[null,null]],"^8",1,"^42",false,"^7",115,"^43","^4W","^9",115,"^45",0,"^46",true,"^3X",["^Y",["^3Y",["^Y",[[]]]]]],"~$parse-commands",["^ ","^3W",null,"^5",["^ ","^6","parse_svg_path/main.cljs","^7",26,"^8",7,"^9",26,"^:",21,"^3X",["^Y",["^3Y",["^Y",[["~$s"]]]]],"~:doc","Splits an SVG path string into a sequence of commands"],"^G","~$parse-svg-path.main/parse-commands","^6","parse_svg_path/main.cljs","^:",21,"^3[",["^Y",[["~$s"]]],"^40",null,"^41",["^Y",[null,null]],"^8",1,"^42",false,"^7",26,"^43","^4F","^9",26,"^45",1,"^46",true,"^3X",["^Y",["^3Y",["^Y",[["~$s"]]]]],"^5;","Splits an SVG path string into a sequence of commands"]],"^W",["^ ","^O","^O","^>","^?","^N","^N","~$r","^N","~$s","^?","^?","^?"],"~:cljs.analyzer/constants",["^ ","^T",["^F",["~$cljs.spec.alpha/*","~:path","~:bezier","~$cljs.spec.alpha/+","~:arc","~:close-path","~$cljs.spec.alpha/cat","~:move-to","~:quadratic-bezier","~:fill","~:value","~:width","~:params","~:line-to","~:command","~$cljs.core/set","~:type","~:points","~:view-box","~:close","~:style","~:textarea","~:rows","~:div","~:cols","^7","~:segment","~:svg","~:d","~:cubic-bezier","~:h1","~:on-change","~:parse-svg-path.main/path","~:margin"]],"~:order",["^5E","^5K","^5Y","^5F","^5B","^5C","^60","^5A","^5D","^5W","^5L","^5M","^5J","^5>","^5N","^5O","^7","^5@","^5Q","^5U","^5R","^61","^5I","^5Z","^5S","^5T","^5V","^5H","^5[","^5X","^5P","^5?","^5G","~:d"]],"^10",["^ ","^U",["^F",[]]],"^11",["^ "],"^12",["^P","^O","^?","^N","^S","^M"]],"^J","^H","~:ns-specs",["^ ","~:parse-svg-path.main/segment",["^Y",["^5D","^5L",["^Y",["^5M","MmLlHhVvCcSsQqTtAaZz"]],"^5J",["^Y",["^5>",["^Y",["^5M","0123456789 .-,"]]]]]],"^60",["^Y",["^5A",["^Y",["^5D","^5W",["^Y",["^5D","^5L",["^Y",["^5M","MmLlHhVvCcSsQqTtAaZz"]],"^5J",["^Y",["^5>",["^Y",["^5M","0123456789 .-,"]]]]]]]]]]],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^1@",[["^66","~:static-fns"],true,["^66","~:shadow-tweaks"],null,["^66","~:elide-asserts"],false,["^66","~:optimize-constants"],null,["^66","^17"],null,["^66","~:external-config"],null,["^66","~:tooling-config"],null,["^66","~:emit-constants"],null,["^66","~:load-tests"],null,["^66","~:form-size-threshold"],null,["^66","~:infer-externs"],true,["^66","^19"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^66","~:fn-invoke-direct"],null,["^66","~:source-map"],"/dev/null"]]]